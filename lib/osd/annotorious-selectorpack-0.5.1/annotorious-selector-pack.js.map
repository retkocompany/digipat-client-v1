{"version":3,"file":"annotorious-selector-pack.js","mappings":"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","sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/./node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/./node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/webpack/runtime/compat get default export","webpack://Annotorious.SelectorPack/webpack/runtime/define property getters","webpack://Annotorious.SelectorPack/webpack/runtime/hasOwnProperty shorthand","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/RectFragment.js","webpack://Annotorious.SelectorPack/./src/point/Point.js","webpack://Annotorious.SelectorPack/./src/point/EditablePoint.js","webpack://Annotorious.SelectorPack/./src/point/PointTool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/polygon/PolygonMask.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/EditableMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygonTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Annotorious\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(self, function() {\nreturn ","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/ \n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id; \n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n  \n  /*****************************************/ \n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector').start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector').end;\n  }\n  \n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));  \n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  \n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /*******************************************/ \n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n\n    // Default image scale\n    this.scale = 1;\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  /**\n   * Implementations MAY extend this (calling super),\n   * to destroy SVG elements, mask, etc.\n   */\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        this.scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        if (this.onScaleChanged)\n          this.onScaleChanged(this.scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  /*********************************/\n  /*  Helpers for drawing handles  */\n  /*********************************/\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandle = handle => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    const outer = handle.querySelector('.a9s-handle-outer');\n\n    const radius = this.scale * (this.config.handleRadius || 6);\n\n    inner.setAttribute('r', radius);\n    outer.setAttribute('r', radius);\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      document.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      document.removeEventListener('dblclick', this.dblClick);\n  }\n\n  /**\n   * If startOnSingleClick is true, the tool starts on single click\n   * as well as drag. If false, starting strictly requires drag!\n   */\n  start = (evt, startOnSingleClick) => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, startOnSingleClick, evt);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';\n","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n  }\n  \n  /**\n   * Implementations MUST override this method!\n   * \n   * Must return the 'g' element with the a9s-annotation class.\n   */\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MUST override this method!\n   * \n   * The annotation argument MUST be used to update\n   * the current state of the shape. It MUST NOT\n   * be stored as 'this.annotation'! 'this.annotation'\n   * MUST remain the original annotation at the time\n   * this EditableShape was created, because we will\n   * need it again in case the user cancels editing.\n   * \n   * Thinking of it in React terms, 'this.annotation'\n   * has the same purpose as props.annotation, whereas\n   * this method affects state.\n   */\n  updateState = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** \n * Parses a W3C Web Annotation FragmentSelector conforming\n * to the Media Fragments spec. Supports (well-formed) xywh=pixel\n * and xywh=percent fragments. \n */\nexport const parseRectFragment = (annotation, image) => {\n  const selector = annotation.selector('FragmentSelector');\n\n  if (selector?.conformsTo.startsWith('http://www.w3.org/TR/media-frags')) {\n    const { value } = selector;\n  \n    const format = value.includes(':') ? value.substring(value.indexOf('=') + 1, value.indexOf(':')) : 'pixel';\n    const coords = value.includes(':') ? value.substring(value.indexOf(':') + 1) : value.substring(value.indexOf('=') + 1);\n\n    let [ x, y, w, h ] = coords.split(',').map(parseFloat);\n\n    if (format.toLowerCase() === 'percent') {\n      x = x * image.naturalWidth  / 100;\n      y = y * image.naturalHeight / 100;\n      w = w * image.naturalWidth  / 100;\n      h = h * image.naturalHeight / 100;\n    }\n\n    return { x, y, w, h };\n  }\n}\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector\n * using pixel coordinates.\n */\nconst toPixelRectFragment = (x, y, w, h, image) => ({\n  source: image?.src,\n  selector: {\n    type: \"FragmentSelector\",\n    conformsTo: \"http://www.w3.org/TR/media-frags/\",\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  }\n});\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector \n * using percent coordinates.\n */\nconst toPercentRectFragment = (x, y, w, h, image) => {\n  const px = x / image.naturalWidth  * 100;\n  const py = y / image.naturalHeight * 100;\n  const pw = w / image.naturalWidth  * 100;\n  const ph = h / image.naturalHeight * 100;\n\n  return {\n    source: image.src,\n    selector: {\n      type: \"FragmentSelector\",\n      conformsTo: \"http://www.w3.org/TR/media-frags/\",\n      value: `xywh=percent:${px},${py},${pw},${ph}`\n    }\n  }\n}\n\nexport const toRectFragment = (x, y, w, h, image, fragmentUnit) =>\n  fragmentUnit?.toLowerCase() === 'percent' ?\n    toPercentRectFragment(x, y, w, h, image) :\n    toPixelRectFragment(x, y, w, h, image);\n\n/** Shorthand to apply the given (x, y, w, h) to the SVG shape **/\nconst setXYWH = (shape, x, y, w, h) => {\n  shape.setAttribute('x', x);\n  shape.setAttribute('y', y);\n  shape.setAttribute('width', w);\n  shape.setAttribute('height', h);\n}\n\n\nconst setPointXY = (shape, x, y) => {\n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', 7); // TODO make configurable\n}\n\nexport const drawRectMask = (imageDimensions, x, y, w, h) => {\n  const mask = document.createElementNS(SVG_NAMESPACE, 'path');\n  mask.setAttribute('fill-rule', 'evenodd');\n\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n\n  return mask;\n}\n\nexport const setRectMaskSize = (mask, imageDimensions, x, y, w, h) => {\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n}\n\n/** \n * Draws an SVG rectangle, either from an annotation, or an\n * (x, y, w, h)-tuple.\n */\nexport const drawRect = (arg1, arg2, arg3, arg4) => {\n  const { x, y, w, h } = arg1.type === 'Annotation' || arg1.type === 'Selection' ?\n    parseRectFragment(arg1, arg2) : { x: arg1, y: arg2, w: arg3, h: arg4 };\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  if (w === 0 && h === 0) {\n    // Edge case: rect is actually a point\n    const pointGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    pointGroup.setAttribute('class', 'a9s-point');\n\n    const outerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n    const innerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n    innerPoint.setAttribute('class', 'a9s-inner');\n    setPointXY(innerPoint, x, y);\n\n    outerPoint.setAttribute('class', 'a9s-outer');\n    setPointXY(outerPoint, x, y);\n\n    pointGroup.appendChild(outerPoint);\n    pointGroup.appendChild(innerPoint);  \n    \n    g.appendChild(pointGroup);\n  } else {\n    const outerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n    const innerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n\n    innerRect.setAttribute('class', 'a9s-inner');\n    setXYWH(innerRect, x, y, w, h);\n\n    outerRect.setAttribute('class', 'a9s-outer');\n    setXYWH(outerRect, x, y, w, h);\n\n    g.appendChild(outerRect);\n    g.appendChild(innerRect);\n  }\n\n  return g;\n}\n\n/** Gets the (x, y, w, h)-values from the attributes of the SVG group **/\nexport const getRectSize = g => {\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    const x = parseFloat(outer.getAttribute('x'));\n    const y = parseFloat(outer.getAttribute('y'));\n    const w = parseFloat(outer.getAttribute('width'));\n    const h = parseFloat(outer.getAttribute('height'));\n\n    return { x, y, w, h };\n  } else {\n    const x = parseFloat(outer.getAttribute('cx'));\n    const y = parseFloat(outer.getAttribute('cy'));\n\n    return { x, y, w: 0, h: 0 };\n  }\n}\n\n/** Applies the (x, y, w, h)-values to the rects in the SVG group **/\nexport const setRectSize = (g, x, y, w, h) => {\n  const inner = g.querySelector('.a9s-inner');\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    setXYWH(inner, x, y, w, h);\n    setXYWH(outer, x, y, w, h);  \n  } else {\n    setPointXY(inner, x, y);\n    setPointXY(outer, x, y);\n  }\n}\n\n/** \n * Shorthand to get the area (rectangle w x h) from the \n * annotation's fragment selector. \n */\nexport const rectArea = (annotation, image) => {\n  const { w, h } = parseRectFragment(annotation, image);\n  return w * h;\n}\n\n","import { toRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\n\nexport const isPoint = annotation =>\n  annotation.target.renderedVia?.name === 'point';\n\nexport const toFragment = (x, y, image, fragmentUnit) => ({\n  ...toRectFragment(x, y, 0, 0, image, fragmentUnit),\n  renderedVia: {\n    name: 'point'\n  }\n});","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { parseRectFragment } from '@recogito/annotorious/src/selectors/RectFragment';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { toFragment } from './Point';\n\nexport default class EditablePoint extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    const { x, y } = parseRectFragment(annotation, env.image);\n\n    this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n\n    this.point = this.drawHandle(x, y);\n    this.point.addEventListener('mousedown', this.onGrab);\n    \n    this.elementGroup.appendChild(this.point);\n\n    this.container.appendChild(this.elementGroup);\n    g.appendChild(this.container);\n\n    // true if te mouse has grabbed the point\n    this.isGrabbed = false;\n  }\n\n  onScaleChanged = () => \n    this.scaleHandle(this.point);\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  onGrab = () => {\n    this.isGrabbed = true;\n  }\n\n  onMouseMove = evt => {\n    if (evt.button !== 0) return;  // left click\n\n    if (this.isGrabbed) {\n      const {x, y} = this.getSVGPoint(evt);\n\n      this.setHandleXY(this.point, x, y);\n\n      const target = toFragment(x, y, this.env.image, this.config.fragmentUnit);\n      this.emit('update', target);\n    }\n  }\n\n  onMouseUp = () => {\n    this.isGrabbed = false;\n  }\n\n  updateState = annotation => {\n    const { x, y } = parseRectFragment(annotation, this.env.image);\n    this.setHandleXY(this.point, x, y);\n  }\n\n  destroy() {\n    this.svg.removeEventListener('mousemove', this.onMouseMove);\n    this.svg.removeEventListener('mouseup', this.onMouseUp);\n\n    this.container.parentNode.removeChild(this.container);\n    super.destroy();\n  }\n\n}","import Tool, { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport EditablePoint from './EditablePoint';\nimport { toFragment, isPoint } from './Point';\n\nexport default class PointTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n  }\n\n  startDrawing = (x, y, _, evt) => {\n    // The top-most existing annotation at this position (if any) \n    const annotation = evt.target.closest('.a9s-annotation')?.annotation;\n\n    // The point drawing tool will ALWAYS create a point annotation,\n    // regardless of whether there's already an annotation underneath.\n    // UNLESS the annotation underneath is itself a point!\n    if (!annotation || !isPoint(annotation)) {\n      const element = this.drawHandle(x, y);\n      this.scaleHandle(element);\n\n      this.g.appendChild(element);\n\n      element.annotation = new Selection(toFragment(x, y, this.env.image, this.config.fragmentUnit));\n\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel')\n    }\n  }\n\n  stop = () => {\n    // Nothing to do\n  }\n\n  get isDrawing() {\n    // Point selection is an instant action - the\n    // tool is never an 'drawing' state\n    return false;\n  }\n  \n  createEditableShape = annotation =>\n    new EditablePoint(annotation, this.g, this.config, this.env);\n\n}\n\nPointTool.identifier = 'point';\n\nPointTool.supports = annotation => {\n  // Not needed, since the target.renderedVia property will be evaluated first\n  return false;\n}","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image?.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return polygonArea(shape);\n  else if (nodeName === 'circle')\n    return circleArea(shape);\n  else if (nodeName === 'ellipse')\n    return ellipseArea(shape);\n  else if (nodeName == 'path')\n    return pathArea(shape);\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nconst polygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\nconst circleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst ellipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst pathArea = path => {\n  const pointList = path.getAttribute('d').split('L');\n  let area = 0;\n\n  if(pointList.length > 1) {\n    var point = pointList[pointList.length - 1].trim().split(' ');\n    let lastX = parseFloat(point[0]);\n    let lastY = parseFloat(point[1]);\n\n    point = pointList[0].substring(1).trim().split(' ');\n    let x = parseFloat(point[0]);\n    let y = parseFloat(point[1]);\n    area += (lastX + x) * (lastY - y);\n    lastX = x;\n    lastY = y;\n\n    for (let i = 1; i < pointList.length; i++) {\n      point = pointList[i].trim().split(' ');\n      x = parseFloat(point[0]);\n      y = parseFloat(point[1]);\n      area += (lastX + x) * (lastY - y);\n      lastX = x;\n      lastY = y;\n    }\n  }\n\n  return Math.abs(0.5 * area);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst isFirefox = /firefox/i.test(navigator.userAgent);\n\nconst formatSvgEl = (svgEl, x, y, w, h) => {\n  svgEl.setAttribute('width', w);\n  svgEl.setAttribute('height', h);\n\n  // Argh - Firefox produces broken SVG bounds for nested SVG\n  if (isFirefox) {\n    svgEl.setAttribute('x', 0);\n    svgEl.setAttribute('y', 0);\n    svgEl.setAttribute('transform', `translate(${x}, ${y})`);  \n  } else {\n    svgEl.setAttribute('x', x);\n    svgEl.setAttribute('y', y);\n  }\n}\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n\n  formatSvgEl(svgEl, x, y, width, height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatter) => {\n  // The formatter can be undefined\n  if (!formatter)\n    return shape;\n\n  const format = formatter(annotation);\n\n  // The formatter is allowed to return null\n  if (!format)\n    return shape;\n\n  if (typeof format === 'string' || format instanceof String) {\n    // Apply CSS class\n    addClass(shape, format); \n  } else if (format.nodeType === Node.ELEMENT_NODE) {\n    appendFormatterEl(format, shape);\n  } else {\n    const { className, style, element } = format;\n\n    if (className)\n      addClass(shape, className);\n\n    if (style) {\n      const outer = shape.querySelector('.a9s-outer');\n      const inner = shape.querySelector('.a9s-inner');\n\n      if (outer && inner) {\n        outer.setAttribute('style', 'display:none');\n        inner.setAttribute('style', style);\n      } else {\n        shape.setAttribute('style', style);\n      }\n    }\n\n    if (element)\n      appendFormatterEl(element, shape);\n\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        shape.setAttribute(key, format[key]);\n      }\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n  if (formatterEl)\n    formatSvgEl(formatterEl, x, y, w, h);\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale =>\n    this.handles.map(this.scaleHandle);\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale =>\n    this.handles.map(this.scaleHandle);\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        const updatedPoints = getPoints(inner).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return (selector.value.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes('Z'));\n}","import { SVG_NAMESPACE } from '../../util/SVG';\n\nexport default class PolygonMask {\n\n  constructor(imageDimensions, polygon) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.polygon = polygon;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.polygon.getAttribute('points')} z`);\n  }\n\n  redraw = () => {\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.polygon.getAttribute('points')} z`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport Mask from '@recogito/annotorious/src/tools/polygon/PolygonMask';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './multipolygonMask';\n\n/**\n * A 'rubberband' selection tool for creating multipolygon drawing by\n * clicking and dragging.\n */\nexport default class RubberbandMultipolygon {\n\n  constructor(anchor, g, env) {\n    this.points =  [];\n    this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.multipolygon = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    this.mask = new Mask(env.image, this.inner);\n\n    // TODO optional: mask to dim the outside area\n    // this.mask = new Mask(env.image, this.inner);\n\n    this.multipolygon.appendChild(this.outer);\n    this.multipolygon.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.multipolygon);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var attr =\"\";\n\n    for (var ps of points){\n      var attr2=\"\"\n      if (ps.length>0){\n        for (var p of ps) {\n          if (p){\n            if (attr2===\"\"){\n              attr2  +=`M${p[0]},${p[1]}`;\n            }\n            else{\n              attr2  +=` L${p[0]},${p[1]}`;\n            }\n          }\n        };\n         attr+=attr2\n      }\n    }\n\n    attr+=\" Z\"\n    \n    this.outer.setAttribute('d', attr);\n    this.inner.setAttribute('d', attr);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n    const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n    var headRest=this.points.slice(0,-1)\n    const rubberband = [ ...head, xy, head[0] ];\n    headRest.push(rubberband)\n    this.setPoints(headRest);\n    this.mask.redraw();\n  }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    if (this.points[this.points.length - 1].length>0){\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      const lastCorner = head[head.length - 1];\n      const dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\n      if (dist > 4) {\n        this.points[this.points.length - 1] = [ ...head, xy, head[0] ];\n        this.setPoints(this.points);   \n        this.mask.redraw();\n      } \n    } else{\n      this.points[this.points.length - 1] = [xy,xy];\n      this.setPoints(this.points);\n    }\n  }\n\n  undo = () => {\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n\n  newPart = () => {\n    this.points.push([]);\n  }\n \n  get element() {\n    return this.multipolygon;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.multipolygon = null;    \n    this.group = null;\n  }\n\n  toSelection = () =>\n    new Selection({\n      ...toSVGTarget(this.group, this.env.image),\n      renderedVia: {\n        name: 'multipolygon'\n      }\n    });\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './MultipolygonMask';\n\nconst getPoints = (shape) => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue)\n  const pointArray = [];\n  for (let pointList of pointLists) {\n    let points = []\n    for (let point of pointList) {\n      let p = {\n        x:parseFloat(point[0]),\n        y:parseFloat(point[1])\n      }\n      points.push(p);\n    }\n    pointArray.push(points);\n  }\n\n  return pointArray;\n}\nconst getPointsFromPathValue = polygon => {\n  var results =polygon.split('M');\n  var allcoords = []\n  results.forEach(function (result, index) {\n    if (result.length>0){\n      let coords = []\n      result=result.replace(/ Z/g,\"Z\")\n      result=result.replace(/Z /g,\"Z\")\n      result=result.replace(/Z/g,\"\")\n      result=result.replace(/L /g,\"L\")\n      result=result.replace(/ L/g,\"L\")\n      var coordsString = result.split(\"L\")\n      coordsString.forEach(function(coord, index){\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(),parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\n      });\n      if (coords[0] !== coords[coords.length - 1]){\n        coords.push(coords[0])\n      }\n      allcoords.push(coords)\n    }\n  });\n  return allcoords\n}\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\nexport const svgFragmentToPoints = annotation => {\n  const svgShape = svgFragmentToShape(annotation);\n  var polygon = svgShape.getAttribute('d')\n  var allcoords =  getPointsFromPathValue(polygon)\n  return allcoords\n  //svgShape.getAttribute('d')\n  //  .split(' ') // Split x/y tuples\n  //  .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n}\n\nconst drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Hack\n  svgFragmentToPoints(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n/**\n * An editable multipolygon drawing.\n */\nexport default class EditableMultipolygon extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n    let pointList = getPoints(this.shape);\n    this.handles = []\n    for (let points of pointList){\n      this.handles.push(points.map(pt => {\n        const handle = this.drawHandle(pt.x, pt.y);\n        handle.addEventListener('mousedown', this.onGrab(handle));\n        this.elementGroup.appendChild(handle);\n        return handle;\n      }))\n    } \n\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    const round = num =>\n    Math.round(10 * num) / 10;\n\n    let str = \"\"\n    for (let pointList of points){\n      str += \"M\"\n      let first = true \n      for (let point of pointList){\n        if (first){\n          first = false\n          str += point.x.toString() + \",\" + point.y.toString()\n        } else {\n          str += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString()\n        }\n      }\n      str += \" Z\"\n    }\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    // this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    if (this.grabbedElem) {\n\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.shape) {\n        const dx = pos.x - this.grabbedAt.x;\n        const dy = pos.y - this.grabbedAt.y;\n\n        let pointList = getPoints(this.shape)\n\n        const updatedPoints = []\n        for (let points of pointList){\n          updatedPoints.push(points.map(pt =>\n            ({ x: pt.x + dx, y: pt.y + dy })))\n        } \n    \n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        let i = 0\n        for (let updatedPointsList of updatedPoints){\n            updatedPointsList.forEach((pt, idx) => { \n              if (this.handles[i][idx] !== undefined)\n                this.setHandleXY(this.handles[i][idx], pt.x, pt.y)\n            });\n            i+=1\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      } else {\n        let handleIdx = -1\n        let pointListIDX = 0\n        let found = false\n\n        for (let handle of this.handles){\n          if (handle.indexOf(this.grabbedElem)>0){\n            handleIdx = handle.indexOf(this.grabbedElem);\n            found=true\n          } else {\n            if (!found){\n              pointListIDX += 1\n            }\n          }\n        }\n  \n        let pointList = getPoints(this.shape)\n  \n        const updatedPoints = []\n        let updatedPointsIDX = 0\n        for (let points of pointList){\n          if (updatedPointsIDX === pointListIDX){\n            let newPoints = []\n            points.forEach(function (value, i) {\n              if (i === handleIdx){\n                newPoints.push(pos)\n              } else {\n                newPoints.push(value)\n              }\n            });\n            updatedPoints.push(newPoints)\n          } else {\n            updatedPoints.push(points)\n          }\n          updatedPointsIDX +=1\n        } \n       \n        this.setPoints(updatedPoints);\n        updatedPointsIDX = 0\n        for (let handle of this.handles){\n          if (updatedPointsIDX === pointListIDX){\n\n            this.setHandleXY(handle[handleIdx], pos.x, pos.y);\n          }\n          updatedPointsIDX +=1\n\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandMultipolygon from './RubberbandMultipolygon';\nimport EditableMultipolygon from './EditableMultipolygon';\n\n/**\n * A rubberband selector for Multipolygon fragments.\n */\nexport default class RubberbandMultipolygonTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n    \n    document.addEventListener('keydown', evt => {\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        this.undo();\n      }\n      \n      if (evt.key == 'n') {\n        this.newPart();\n      }\n    });  \n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandMultipolygon([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      const { width, height } = this.rubberband.getBoundingClientRect();\n\n      const minWidth = this.config.minSelectionWidth || 4;\n      const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (width >= minWidth || height >= minHeight) {\n        this.rubberband.addPoint([ x, y ]);\n      } else {\n        this.emit('cancel');\n        this.stop();\n      }\n    }\n  }\n  \n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    const shape = this.rubberband.element;\n    shape.annotation = this.rubberband.toSelection();\n    this.emit('complete', shape);\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableMultipolygon(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandMultipolygonTool.identifier = 'multipolygon';\n\nRubberbandMultipolygonTool.supports = annotation => false;","import PointTool from './point/PointTool';\nimport RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\nimport RubberbandMultipolygonTool from './multipolygon/RubberbandMultipolygonTool';\n\nconst ALL_TOOLS = new Set([\n  'point',\n  'circle',\n  'ellipse',\n  'freehand',\n  // 'multipolygon' // exclude from defaults for now\n]);\n\nconst SelectorPack = (anno, config) => {\n\n  // Add configured tools, or all\n  const tools = config?.tools ? \n    config.tools.map(t => t.toLowerCase()) : ALL_TOOLS;\n\n  tools.forEach(tool => {\n    if (tool === 'point')\n      anno.addDrawingTool(PointTool);\n\n    if (tool === 'circle')\n      anno.addDrawingTool(RubberbandCircleTool);\n\n    if (tool === 'ellipse')\n      anno.addDrawingTool(RubberbandEllipseTool);\n  \n    if (tool === 'freehand')\n      anno.addDrawingTool(RubberbandFreehandTool);\n\n    if (tool === 'multipolygon')\n      anno.addDrawingTool(RubberbandMultipolygonTool);\n  });\n\n}\n\nexport default SelectorPack;\n"],"names":["root","factory","exports","module","define","amd","self","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","E","on","name","callback","ctx","e","this","push","fn","once","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","evts","liveEvents","TinyEmitter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","getRandomValues","SVG_NAMESPACE","addClass","el","className","classNames","attr","getAttribute","Set","split","getClassNames","add","setAttribute","from","join","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","substr","options","buf","offset","rnds","random","arr","toLowerCase","validate","TypeError","stringify","WebAnnotation","annotation","opts","opt_props","opt_opts","underlying","type","target","selector","find","s","other","id","equals","readOnly","motivation","body","bodies","exact","start","end","args","stub","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","ToolLike","g","config","env","ResizeObserver","resizeObserver","svgBounds","svg","getBoundingClientRect","viewBox","baseVal","width","height","scale","Math","max","onScaleChanged","observe","parentNode","evt","pt","createSVGPoint","bbox","x","clientX","y","clientY","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","group","drawCircle","r","c","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","closest","image","Element","HTMLDocument","enableResponsive","disconnect","EventEmitter","Tool","mouseMove","mouseUp","dblClick","getSVGPoint","started","addEventListener","button","removeEventListener","startOnSingleClick","startDrawing","supports","EditableShape","parseRectFragment","conformsTo","startsWith","value","format","includes","substring","indexOf","map","w","h","naturalWidth","naturalHeight","toFragment","fragmentUnit","px","py","pw","ph","src","toPercentRectFragment","toPixelRectFragment","toRectFragment","renderedVia","EditablePoint","scaleHandle","point","isGrabbed","setHandleXY","onMouseMove","onMouseUp","container","elementGroup","drawHandle","onGrab","removeChild","PointTool","isPoint","element","identifier","sanitize","doc","cleanEl","attributes","forEach","removeAttribute","scripts","getElementsByTagName","reverse","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","serialized","outerHTML","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","tx","ty","mask","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","style","display","anchor","pow","redraw","Mask","pointerEvents","isFirefox","test","userAgent","formatSvgEl","svgEl","appendFormatterEl","formatterEl","getBBox","append","formatter","String","nodeType","Node","ELEMENT_NODE","setFormatterElSize","EditableCircle","handles","topleft","topright","bottomright","bottomleft","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","oppositeHandle","stretchCorners","t","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","RubberbandEllipseTool","RubberbandFreehand","points","str","xy","addPoint","setPoints","freehand","getPoints","pointList","trim","EditableFreehand","round","num","delta","dx","dy","updatedPoints","RubberbandFreehandTool","_isDrawing","onDblClick","toUpperCase","PolygonMask","polygon","RubberbandMultipolygon","ps","attr2","p","head","headRest","lastCorner","pop","multipolygon","pointArray","getPointsFromPathValue","nodeValue","results","allcoords","result","index","coords","toFixed","EditableMultipolygon","first","idx","pointListIDX","found","updatedPointsIDX","newPoints","svgFragmentToPoints","RubberbandMultipolygonTool","undo","newPart","altKey","ctrlKey","ALL_TOOLS","anno","tools","tool","addDrawingTool"],"sourceRoot":""}